dubbo:
  registry:
    address: spring-cloud://192.168.10.101
  cloud:
    subscribed-services: discovery-server
  consumer:
    loadbalance: random
    check: false


spring:
#  profiles:
#    include: dbconfig
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3301/client?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&useSSL=false
    username: test
    password: 123456

  application:
    name: discovery-client
  main:
    allow-bean-definition-overriding: true
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.10.101:8848
    sentinel:
      eager: true
      transport:
        dashboard: 192.168.10.101:8858
    stream:
      rocketmq:
        binder:
          name-server: 129.211.74.124:9876
        bindings:
          input1:
            consumer:
              orderly: false
              tags: tagStr1
          input2:
            consumer:
              orderly: false
              tags: tagStr
      # 定义name为input的binding
      bindings:
        input1:
          destination: test-topic
          content-type: application/json
          group: test-group1
        input2:
          destination: test-topic
          content-type: application/json
          group: test-group2
          consumer:
            concurrency: 20
#seata设置
seata:
  enabled: true
  application-id: discovery-client
  tx-service-group: discovery-client-group
  enable-auto-data-source-proxy: true
  registry:
    file:
      name: file.conf
    type: nacos
    nacos:
      server-addr: 127.0.0.1:8848
      namespace:
      cluster: default
  config:
    file:
      name: file.conf
    type: nacos
    nacos:
      namespace:
      server-addr: 127.0.0.1:8848
      group: SEATA_GROUP
  use-jdk-proxy: true

server:
  port: 8002
  # 下面是配置undertow作为服务器的参数
  undertow:
    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
    io-threads: 4
    # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
    worker-threads: 20
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分
    buffer-size: 1024
    # 是否分配的直接内存
    direct-buffers: true

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

#开启sql日志
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl