dubbo:
  # 接口扫描路径
  scan:
    base-packages: com.example.discoveryserver.server
  protocol:
     name: dubbo
    # -1 代表自动分配端口
     port: -1
  registry:
    # 服务注册地址，也就是 Nacos 的服务器地址
    address: spring-cloud://127.0.0.1
  cloud:
    subscribed-services: api-gateway
  provider:
    # 配置负载均衡策略（轮询）
    loadbalance: roundrobin

spring:
#  profiles:
#      include: dbconfig
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3303/db0?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&useSSL=false
    username: test
    password: 123456
  application:
       name: discovery-server
  main:
    allow-bean-definition-overriding: true
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
#      config:
#        server-addr: 127.0.0.1:8848
#        file-extension: yaml
#        prefix: discovery-server-example
#        group: DEV_GROUP
    # 配置rocketmq的nameserver地址
    stream:
      rocketmq:
        binder:
          name-server: 129.211.74.124:9876
        bindings:
          output:
            destination: test-topic
            content-type: application/json
            producer:
              transactional: true
              group: test-stream-rocketmq-transactional
      bindings:
        output:
          destination: test-topic
          contentType: application/json



server:
  port: 8001
    # 下面是配置undertow作为服务器的参数
  undertow:
      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
      io-threads: 4
      # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
      worker-threads: 20
      # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
      # 每块buffer的空间大小,越小的空间被利用越充分
      buffer-size: 1024
      # 是否分配的直接内存
      direct-buffers: true

# 服务监控检查
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

#seata设置
seata:
  enabled: true
  application-id: discovery-server
  tx-service-group: discovery-server-group
  enable-auto-data-source-proxy: true
  registry:
    file:
      name: file.conf
    type: nacos
    nacos:
      server-addr: 127.0.0.1:8848
      namespace:
      cluster: default
  config:
    file:
      name: file.conf
    type: nacos
    nacos:
      namespace:
      server-addr: 127.0.0.1:8848
      group: SEATA_GROUP
  use-jdk-proxy: true
    #  config:
    #    type: nacos
    #    nacos:
    #      namespace:
    #      serverAddr: 127.0.0.1:8848
    #      group: SEATA_GROUP
    #      userName: "nacos"
    #      password: "nacos"
    #  registry:
    #    type: nacos
    #    nacos:
    #      application: seata-server
    #      server-addr: 127.0.0.1:8848
    #      group: SEATA_GROUP
    #      namespace:
    #      userName: "nacos"
    #      password: "nacos"
#开启sql日志
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
